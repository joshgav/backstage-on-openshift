commonAnnotations:
  app.openshift.io/connects-to: >-
    [{"apiVersion":"postgresql.cnpg.io/v1","kind":"Cluster","name":"backstage-pgcluster"}]
  app.openshift.io/vcs-uri: 'https://github.com/joshgav/backstage-on-openshift'
commonLabels:
  app: backstage
  app.kubernetes.io/name: backstage
backstage:
  image:
    ## for self-managed Backstage image
    # registry: ${registry_hostname}
    # repository: ${quay_user_name}/${bs_app_name}-backstage
    # tag: latest
    ## for Janus/RHDH image
    registry: ${registry_hostname}
    repository: rhdh/rhdh-hub-rhel9
    tag: next
  podAnnotations:
    instrumentation.opentelemetry.io/inject-nodejs: "true"
  extraAppConfig:
    - configMapRef: backstage-app-config
      filename: app-config.yaml
  extraVolumes:
    - name: backstage-pgcluster-ca
      secret:
        secretName: backstage-pgcluster-ca
        items:
          - key: ca.crt
            path: ca.crt
    - name: github-app-credentials
      secret:
        secretName: github-app-credentials
        items:
          - key: github-app-credentials.yaml
            path: github-app-credentials.yaml
  extraVolumeMounts:
    - name: backstage-pgcluster-ca
      mountPath: /var/run/secrets/backstage-pgcluster-ca
      subPath: ca.crt 
    - name: github-app-credentials
      mountPath: /app/github-app-credentials.yaml
      subPath: github-app-credentials.yaml
  extraEnvVarsSecrets:
    - backstage-pgcluster-superuser
    - github-token
    - argocd-token
    - quay-token
  extraEnvVars:
    - name: PGSSLMODE
      value: "require"
  podSecurityContext:
    runAsUser: 1000
postgresql:
  enabled: false
## for private Backstage images, e.g. Janus/RHDH
global:
  imagePullSecrets:
  - quay.io-pull-secret
